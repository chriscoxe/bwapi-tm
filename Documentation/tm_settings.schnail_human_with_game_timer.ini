##############################################################################
# Sample Tournament Module settings file, with default values commented.
#
# The existence of this file is optional. By default, the Tournament Module
# reads it from the relative path "bwapi-data\tm_settings.ini". The
# "TM_SETTINGS_FILE" environment variable can be used to read it from an
# alternative location.
#
# All settings (except "TM_SETTINGS_FILE") can be overridden by their
# respective environment variable that has the same name.
##############################################################################

# Local speed, i.e. the number of milliseconds to wait between processing
# each frame. Default: 0
TM_LOCAL_SPEED 42

# By default, humans are disabled from controlling the Brood War GUI in-game.
# Note: this does not affect whether bots are allowed to set the UserInput
# flag (normally, bots are not allowed to do that). Default: true
TM_DISABLE_USER_INPUT false

# By default, the Tournament Module will keep resetting the local speed to
# TM_LOCAL_SPEED in an attempt to prevent people from changing the speed by
# typing e.g. "/speed 42" into the Brood War GUI. Warning: the attempts might
# not work if the "speed_override" setting is configured in bwapi.ini.
# Default: true
#TM_DISABLE_USER_INPUT_LOCAL_SPEED true

# By default, do not allow the bot to send chat messages to other players via
# the sendText() method. sendText() is one way of controlling a bot remotely,
# so most competitions leave it disabled. Note: this setting does not prevent
# the Tournament Module itself from using sendText(). Default: true
#TM_DISABLE_BOT_SENDTEXT true

# By default, do not allow the bot to use the printf() method to display text
# in the BWAPI GUI. Leaving this setting disabled can help supress bots from
# spamming some text. Note: this setting does not prevent the Tournament
# Module itself from using printf(). Default: true
#TM_DISABLE_BOT_PRINTF true

# By default, do not allow the bot the ability to use the setTextSize() method
# to vary the variable that controls the size of the text the bot may
# subsequently display in the BWAPI GUI. Note: this setting does not prevent
# the Tournament Module itself from using setTextSize(). Default: true
#TM_DISABLE_BOT_SETTEXTSIZE true

# Initial command optimization level the Tournament Module sets in onStart()
# for the bot to use. See BWAPI's setCommandOptimizationLevel() documentation
# for more information. Also see TM_CMD_OPTIMIZ_LEVEL_MIN. Default: 1
#TM_CMD_OPTIMIZ_LEVEL_INIT 1

# Minimum command optimization level that the bot is allowed to set. See the
# BWAPI documentation for setCommandOptimizationLevel() for more information.
# Also see TM_CMD_OPTIMIZ_LEVEL_INIT. Default: 0
#TM_CMD_OPTIMIZ_LEVEL_MIN 0

# The number of graphical frames for every logical frame. 0 means use whatever
# BWAPI uses by default. Default: 0
TM_FRAME_SKIP 1

# Enable the display of BWAPI's in-game GUI.
# Note: this affects whether the Tournament Module is allowed to display
# information and affects whether information is displayed from the bot's GUI
# assuming the bot is allowed to, but does not affect whether the bot is
# allowed to display information on its GUI. Normally, bots are allowed most
# BWAPI GUI features, but some permissions can be controlled via
# TM_DISABLE_BOT_PRINTF and TM_DISABLE_BOT_SETTEXTSIZE. See also:
# TM_DRAW_BOT_NAMES, TM_DRAW_TOURNAMENT_INFO, TM_DRAW_UNIT_INFO,
# TM_DISABLE_DRAW_GAME_TIMER. Default: true
#TM_DRAW_GUI true

# Display the names of the players. Note: setting this to true will not work
# unless TM_DRAW_GUI is also true. Default: true
TM_DRAW_BOT_NAMES false

# Display information about the state of the Tournament Module. Note: setting
# this to true will not work unless TM_DRAW_GUI is also true. Default: true
TM_DRAW_TOURNAMENT_INFO false

# Display information about your units.  Note: setting this to true will not
# work unless TM_DRAW_GUI is also true. Default: true
TM_DRAW_UNIT_INFO false

# Disable the display of the in-game timer.  Note: setting this to false will
# not work unless TM_DRAW_GUI is true. Default: true
TM_DISABLE_DRAW_GAME_TIMER false

# Specify per-frame timeout limits via a space-delimited set of at least one
# pair(s) of timeout values. The first value of each pair is the number of
# milliseconds and the second value of each pair is the number of frames.
# Examples:
#     (Default) Timeout when
#     320 frames exceed 55 milliseconds or
#     10 frames exceed 1000 milliseconds or
#     1 frame exceeds 10000 milliseconds:
#         TM_TIMEOUTS 55 320 1000 10 10000 1
#     No per-frame timeouts:
#         TM_TIMEOUTS 0 0
TM_TIMEOUTS 0 0

# Leave the game if the frame count exceeds this number of frames. 0 means no
# limit. Default: 85714
TM_GAME_FRAME_LIMIT 0

# Leave the game if the total game elapsed time so far (i.e. wall clock time)
# exceeds this number of milliseconds. 0 means no limit. Default: 0
#TM_GAME_TIME_LIMIT 0

# By default, frame numbers less than this number are ignored for the purposes
# of per-frame timeouts. 0 means all frames are considered. Default: 11
#TM_FRAME_THRESH_TIMED 11

# Auto-observer, e.g. automatically keep changing the camera view to where the
# action is. Default: true
TM_AUTO_OBS false

# If a player pauses the game, automatically resume the game. Default: true
#TM_AUTO_RESUME_GAME true

# Path of the state file. The Tournament Module writes state information to
# this file during frame number 0's onFrame() callback, and the first occasion
# that any per-frame timeouts exceed limit(s) before the onEnd() callback, and
# the first occasion that the game frame limit or game elapsed time limit is
# exceeded before the onEnd() callback, and regularly since the last write
# (see TM_STATE_FILE_UPDATE_TIME_PERIOD and TM_STATE_FILE_UPDATE_FRAME_PERIOD)
# throughout the game before the onEnd() callback, and in the onEnd()
# callback. Default: gameState.txt
TM_STATE_FILE bwapi-data\TM\gameState.txt

# Period for regularly updating the state file, in milliseconds. Set it to 0
# to disable using a timer to control when to update the state file. See
# TM_STATE_FILE, TM_STATE_FILE_UPDATE_FRAME_PERIOD. Note: this setting
# operates independently to the the TM_STATE_FILE_UPDATE_FRAME_PERIOD setting.
# To update the state file every frame regardless of timing, set
# TM_STATE_FILE_UPDATE_FRAME_PERIOD to 1 rather than altering this setting,
# but writing to disk every frame might be slow. Default: 5000
#TM_STATE_FILE_UPDATE_TIME_PERIOD 5000

# Period for regularly updating the state file, in frames, starting on frame
# number 0. See TM_STATE_FILE, TM_STATE_FILE_UPDATE_TIME_PERIOD. Note: this
# setting operates independently to the the TM_STATE_FILE_UPDATE_TIME_PERIOD
# setting, and the state file is always updated on frame number 0 regardless
# of this setting. Examples:
#     (Default) Update the state file on frame number 0:
#         TM_STATE_FILE_UPDATE_FRAME_PERIOD 0
#     Update the state file on frame numbers 0, 360, 720, 1080, etc:
#         TM_STATE_FILE_UPDATE_FRAME_PERIOD 360
#     Update the state file on frame number 0, 1, 2, 3, etc (warning: slow?):
#         TM_STATE_FILE_UPDATE_FRAME_PERIOD 1
#TM_STATE_FILE_UPDATE_FRAME_PERIOD 0
